{"version":3,"sources":["components/DialobNav.js","components/styles/doc/Doc.js","components/styles/doc/DocList.js","components/styles/doc/DocTable.js","components/styles/site/SiteList.js","components/DialobIntro.js","components/doc/subs/GlobalList.js","components/doc/subs/LifeCycle.js","components/doc/subs/RegEx.js","components/DialobDoc.js","reportWebVitals.js","index.js"],"names":["DialobNav","classes","AppBar","position","className","appBar","Toolbar","Typography","variant","noWrap","DocHeading1","withStyles","theme","root","paddingBottom","this","props","children","gutterBottom","Divider","React","Component","DocHeading2","DocCodeBlock","DocParagraph","DocListO","DocListU","DocListText","DocTableBody","DocTableRow","DocTableCol","Sub","onClick","ListItem","button","nested","ListItemText","nestedText","SiteList","state","open","handleClick","bind","setState","oldState","name","subs","Children","map","child","newProps","Object","assign","cloneElement","primary","Collapse","in","timeout","unmountOnExit","List","component","disablePadding","SiteNavigation","SiteNavi","width","maxWidth","backgroundColor","palette","background","paper","paddingLeft","spacing","fontSize","DialobIntro","H1","H2","paragraph","GlobalList","LifeCycle","RegEx","DialobDoc","nowShowing","undefined","setNowShowing","newContent","topicContent","CssBaseline","Drawer","drawer","drawerPaper","drawerContainer","Navi","content","display","zIndex","flexShrink","overflow","flexGrow","padding","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9b5d0d04.chunk.js","sourcesContent":["import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\n\nexport default function DialobNav({ classes }) {\n\n  return (\n    <AppBar position=\"fixed\" className={classes.appBar}>\n      <Toolbar>\n        <Typography variant=\"h6\" noWrap>\n          Composer Documentation\n          </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n}","import React from 'react';\n\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\n\nimport { withStyles } from '@material-ui/core/styles';\n\n\nconst styles = (theme) => ({\n  root: {\n    paddingBottom: '30px'\n  }\n});\n\n\nexport const DocHeading1 = withStyles(styles)(\n\n  class DocHeading1 extends React.Component {\n    render() {\n      const {children, classes} = this.props;\n      return (<div className={classes.root}>\n        <Typography variant=\"h4\" gutterBottom>{children}</Typography>\n        <Divider/>\n      </div>);\n    }\n  }\n);\n\nexport class DocHeading2 extends React.Component {\n\n  render() {\n    const {children} = this.props;\n    return (<div>\n      <Typography variant=\"h6\" gutterBottom>{children}</Typography>\n    </div>);\n  }\n}\n\n\nexport class DocCodeBlock extends React.Component {\n\n  render() {\n    return (<div>\n    </div>);\n  }\n}\n\n\n\nexport class DocParagraph extends React.Component {\n\n  render() {\n    return (<div>\n    </div>);\n  }\n}\n","import React from 'react';\n\n\n\nexport class DocListO extends React.Component {\n  render() {\n    return (<div>\n    </div>);\n  }\n}\n\nexport class DocListU extends React.Component {\n\n  render() {\n    return (<div>\n    </div>);\n  }\n}\n\n\nexport class DocListText extends React.Component {\n  render() {\n    return (<div>\n    </div>);\n  }\n}","import React from 'react';\n\n\nexport class DocTableBody extends React.Component {\n\n  render() {\n    return (<div>\n    </div>);\n  }\n}\n\n\nexport class DocTableRow extends React.Component {\n  render() {\n    return (<div>\n    </div>);\n  }\n}\n\nexport class DocTableCol extends React.Component {\n  render() {\n    return (<div>\n    </div>);\n  }\n}\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport Collapse from '@material-ui/core/Collapse';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Divider from '@material-ui/core/Divider';\n\nconst styles = (theme) => ({\n    root: {\n      width: '100%',\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper,\n    },\n    nested: {\n      paddingLeft: theme.spacing(4)\n     // color: 'blue',\n      //textDecoration: 'underline'\n    },\n    nestedText: {\n//      fontWeight: 900,\n      fontSize: '0.9rem'\n    }\n});\n\n\nexport class Sub extends React.Component {\n  render () {\n    const { onClick, classes, children } = this.props;\n    return (         \n      <ListItem button className={classes.nested} onClick={onClick}>\n        <ListItemText>\n          <span className={classes.nestedText}>{children}</span>\n        </ListItemText>\n      </ListItem>);\n  }\n}\nSub.propTypes = {\n  // children: PropTypes.element.isRequired,\n  // classes: PropTypes.object.isRequired,\n  // onClick: PropTypes.func.isRequired,\n};\n\nexport class SiteList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { open: false };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState((oldState) => {\n      return { open: !oldState.open };\n    });\n  }\n\n  render() {\n    const { handleClick } = this;\n    const { open } = this.state;\n    const { classes, name, children } = this.props;\n\n    const subs = React.Children.map(children, child => {\n      const newProps = Object.assign({}, child.props, { classes })\n      return React.cloneElement(child, newProps);\n    })\n    \n    return (<div>\n      <ListItem button onClick={handleClick} className={classes.nested}>\n        <ListItemText primary={name} />\n        {open ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n          {subs}\n        </List>\n      </Collapse>\n      <Divider />\n    </div>);\n  }\n}\n\nSiteList.propTypes = {\n  name: PropTypes.string.isRequired\n};\n\n\n\nclass SiteNavigation extends React.Component {\n\n  render() {\n    const { classes, children } = this.props;\n\n    const subs = React.Children.map(children, child => {\n      const newProps = Object.assign({}, child.props, { classes })\n      return React.cloneElement(child, newProps);\n    })\n    \n    return (\n      <List component=\"nav\" className={classes.root}>{subs}</List>\n    );\n  }\n} \nexport const SiteNavi = withStyles(styles)(SiteNavigation);","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { Doc } from './styles';\n\nexport default class DialobIntro extends React.Component {\n\n  render() {\n    return (<div>\n      <Doc.H1>Dialob Composer User Guide</Doc.H1>\n      <Doc.H2>Welcome to Dialob: A powerful platform for creating online dialogs (forms) and providing solutions for organisations in all sectors.</Doc.H2>\n      <Typography paragraph>\n      Dialob is a platform for creating and testing responsive dialogs and publishing them online. In the context of the Dialob platform, a dialog is both a form and a process. Creating with Dialob is a dynamic process wherein the word “dialog” is a representation of the constant communication between user inputs on the front-end and Dialob’s back-end processes, resulting in a constant “dialogue” between the system and the user throughout the creation process. In this way, Dialob constantly updates and saves user inputs on the back-end side and reflects those changes in near real time. The product and end result of the dialog process is a highly customizable form with validations, versioning, translation, and security built in, all tailored to a specific end-user requirement.\n      </Typography>\n    </div>\n    );\n  }\n}\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { Doc } from '../../styles';\n\nexport class GlobalList extends React.Component {\n\n  render() {\n    return (<div>\n<Doc.H1>Global and Local Lists</Doc.H1>\n<Doc.H2>Global and local lists</Doc.H2>\n\n    </div>);\n  }\n}\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { Doc } from '../../styles';\n\nexport class LifeCycle extends React.Component {\n\n  render() {\n    return (<div>\n      <Doc.H1>How to create a version tag</Doc.H1>\n      <Doc.H2>How to create a version tag</Doc.H2>\n    </div>);\n\n  }\n}\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { Doc } from '../../styles';\n\nexport class RegEx extends React.Component {\n\n  render() {\n    return (<div>\n  <Doc.H1>Regular Expressions</Doc.H1>\n  <Doc.H2>Regular Expressions</Doc.H2>\n\n    </div>);\n  }\n}\n","import React from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\n\nimport DialobNav from './DialobNav';\nimport DialobIntro from './DialobIntro';\n\nimport { Site } from './styles';\nimport { Subs } from './doc';\n\n\nconst drawerWidth = 240;\nconst styles = (theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerContainer: {\n    overflow: 'auto',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  }\n});\n\nclass DialobDoc extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { nowShowing: undefined };\n    this.setNowShowing = this.setNowShowing.bind(this);\n  }\n\n  setNowShowing(newContent) {\n    this.setState((oldState) => {\n      return { nowShowing: newContent };\n    });\n  }\n\n  render() {\n    const {classes} = this.props;\n    const { nowShowing } = this.state;\n    const { setNowShowing } = this;\n    const topicContent = nowShowing ? nowShowing : <DialobIntro />;\n\n    return (<div className={classes.root}>\n      <CssBaseline />\n      <DialobNav classes={classes}/>\n      \n      <Drawer className={classes.drawer} variant=\"permanent\" classes={{paper: classes.drawerPaper}}>\n        <Toolbar />\n        <div className={classes.drawerContainer}>\n\n          <Site.Navi>\n            <Site.List name=\"General Features\">\n              <Site.Sub onClick={() => setNowShowing(<Subs.LifeCycle />)}>Lifecycle Management and Versioning</Site.Sub>\n              <Site.Sub onClick={() => setNowShowing(<Subs.GlobalList />)}>Global and Local Lists</Site.Sub>\n              <Site.Sub onClick={() => setNowShowing(<Subs.RegEx />)}>Working with Regular Expressions</Site.Sub>\n            </Site.List>\n\n          </Site.Navi>\n\n        </div>\n      </Drawer>\n      <main className={classes.content}>\n        <Toolbar />\n        {topicContent}\n      </main>\n    </div>);\n  }\n}\nexport default withStyles(styles)(DialobDoc);","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport DialobDoc from './components/DialobDoc';\n\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <DialobDoc />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}