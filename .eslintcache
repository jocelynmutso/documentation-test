[{"/Users/Jocelyn/Development/documentation-test/src/index.js":"1","/Users/Jocelyn/Development/documentation-test/src/reportWebVitals.js":"2","/Users/Jocelyn/Development/documentation-test/src/themes/index.tsx":"3","/Users/Jocelyn/Development/documentation-test/src/themes/DefaultTheme.tsx":"4","/Users/Jocelyn/Development/documentation-test/src/App.tsx":"5","/Users/Jocelyn/Development/documentation-test/src/core/Navigation.tsx":"6","/Users/Jocelyn/Development/documentation-test/src/core/Topic.tsx":"7","/Users/Jocelyn/Development/documentation-test/src/core/Note.tsx":"8","/Users/Jocelyn/Development/documentation-test/src/markdown/ResponseTypes/index.tsx":"9","/Users/Jocelyn/Development/documentation-test/src/lab/index.tsx":"10","/Users/Jocelyn/Development/documentation-test/src/lab/ShowMeText/ShowMeText.tsx":"11","/Users/Jocelyn/Development/documentation-test/src/markdown/Expressions/index.tsx":"12","/Users/Jocelyn/Development/documentation-test/src/lab/ShowMeText/MyDialog.tsx":"13","/Users/Jocelyn/Development/documentation-test/src/lab/ShowMeText/MyTextField.tsx":"14","/Users/Jocelyn/Development/documentation-test/src/markdown/Logic/index.tsx":"15","/Users/Jocelyn/Development/documentation-test/src/markdown/BasicOperations/index.tsx":"16","/Users/Jocelyn/Development/documentation-test/src/markdown/AdvancedOperations/index.tsx":"17","/Users/Jocelyn/Development/documentation-test/src/markdown/Reference/index.tsx":"18"},{"size":595,"mtime":1610445730885,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1603559265615,"results":"21","hashOfConfig":"20"},{"size":41,"mtime":1610445730907,"results":"22","hashOfConfig":"20"},{"size":1524,"mtime":1610445730907,"results":"23","hashOfConfig":"20"},{"size":2338,"mtime":1610457354948,"results":"24","hashOfConfig":"20"},{"size":2694,"mtime":1610458530920,"results":"25","hashOfConfig":"20"},{"size":2003,"mtime":1610458121129,"results":"26","hashOfConfig":"20"},{"size":542,"mtime":1610445730884,"results":"27","hashOfConfig":"20"},{"size":257,"mtime":1610445730904,"results":"28","hashOfConfig":"20"},{"size":75,"mtime":1610357711455,"results":"29","hashOfConfig":"20"},{"size":484,"mtime":1610366526125,"results":"30","hashOfConfig":"20"},{"size":197,"mtime":1610445730895,"results":"31","hashOfConfig":"20"},{"size":815,"mtime":1610366547880,"results":"32","hashOfConfig":"20"},{"size":898,"mtime":1610364018592,"results":"33","hashOfConfig":"20"},{"size":671,"mtime":1610445730897,"results":"34","hashOfConfig":"20"},{"size":722,"mtime":1610445730890,"results":"35","hashOfConfig":"20"},{"size":696,"mtime":1610445730887,"results":"36","hashOfConfig":"20"},{"size":334,"mtime":1610445730900,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"6nym9s",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"45"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"45"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"45"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"63"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"/Users/Jocelyn/Development/documentation-test/src/index.js",[],["81","82"],"/Users/Jocelyn/Development/documentation-test/src/reportWebVitals.js",[],"/Users/Jocelyn/Development/documentation-test/src/themes/index.tsx",[],["83","84"],"/Users/Jocelyn/Development/documentation-test/src/themes/DefaultTheme.tsx",["85"],"import { createMuiTheme } from '@material-ui/core/styles';\nimport { PaletteOptions } from '@material-ui/core/styles/createPalette';\nimport Typography from '@material-ui/core/Typography';\n\n\nconst palette: PaletteOptions = {\n  type: 'light',\n  primary: {\n    main: '#114B8E',\n  },\n  secondary: {\n    main: '#ff8600',\n  },\n  text: {\n    primary: 'rgba(9,9,59,0.87)',\n    secondary: 'rgba(44,75,148,0.75)',\n  },\n}\n\nconst DefaultTheme = createMuiTheme({\n  palette: palette,\n\n  props: {\n\n  },\n  \n  overrides: {\n  \n  },\n\ntypography: {\n  h1: {\n    fontSize: \"2.2rem\",\n    lineHeight: 1.5,\n    padding: 10,\n    marginLeft: '10px',\n    marginRight: '10px',\n    fontFamily: '\"Mulish\", sans-serif',\n    fontWeight: 800,\n    textAlign: 'center',\n   \n  },\n  h2: {\n    fontSize: \"1.8rem\",\n    lineHeight: 1.5,\n    fontFamily: '\"Mulish\", sans-serif',\n    fontWeight: 900,\n  },\n  h3: {\n    fontSize: \"1.5rem\",\n    lineHeight: 1.5,\n    fontFamily: '\"Mulish\", sans-serif',\n    fontWeight: 900,\n  },\n  h4: {\n    fontSize: \"1.2rem\",\n    lineHeight: 1,\n    fontFamily: '\"Mulish\", sans-serif',\n    fontWeight: 700\n  },\n  h5: {\n    fontSize: \"1.2rem\",\n    fontFamily: '\"Mulish\", sans-serif',\n    fontWeight: 700\n  },\n  h6: {\n    fontFamily: '\"Mulish\", sans-serif',\n    fontWeight: 700\n  },\n  body1: {\n    fontFamily: '\"Mulish\", sans-serif',\n    fontWeight: 400,\n    fontSize: '1rem',\n  },\n  body2: {\n    fontFamily: '\"Mulish\", sans-serif',\n    fontWeight: 400,\n    fontSize: '1rem',\n    paddingBottom: 20,\n   }\n  }\n})\n\n\nexport default DefaultTheme;","/Users/Jocelyn/Development/documentation-test/src/App.tsx",["86"],"import React from 'react';\n\nimport { Theme, makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\n\nimport Navigation from './core/Navigation';\nimport Topic from './core/Topic';\n\nimport ResponseTypes from './markdown/ResponseTypes';\nimport Expressions from './markdown/Expressions';\nimport Logic from './markdown/Logic';\n\nimport ShowMeText from './lab';\nimport BasicOperations from './markdown/BasicOperations';\nimport AdvancedOperations from './markdown/AdvancedOperations';\nimport Reference from './markdown/Reference';\n\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    display: 'flex',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerContainer: {\n    overflow: 'auto',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n\n  list: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n    padding: 5,\n  },  \n}));\n\nconst App = () => {\n  const classes = useStyles();\n  const [nowShowing, setNowShowing] = React.useState<React.ReactNode>(<div>start</div>);\n\n  return (<div className={classes.root}>\n    <CssBaseline />\n    <Navigation onClick={() => setNowShowing(<div />) }/>\n    <Drawer className={classes.drawer} variant=\"permanent\" classes={{paper: classes.drawerPaper}}>\n      <Toolbar />\n      <div className={classes.drawerContainer}>\n        <List component=\"nav\" className={classes.list}>\n          <Topic onClick={(content) => setNowShowing(content)} items={BasicOperations} />\n          <Topic onClick={(content) => setNowShowing(content)} items={AdvancedOperations} />\n          <Topic onClick={(content) => setNowShowing(content)} items={Expressions} />\n          <Topic onClick={(content) => setNowShowing(content)} items={ResponseTypes} />\n          <Topic onClick={(content) => setNowShowing(content)} items={Logic} />\n          <Topic onClick={(content) => setNowShowing(content)} items={Reference} />\n        </List>\n      </div>\n    </Drawer>\n    <main className={classes.content}>\n      <Toolbar />\n      {nowShowing}\n    </main>\n  </div>);\n}\nexport default App;","/Users/Jocelyn/Development/documentation-test/src/core/Navigation.tsx",[],"/Users/Jocelyn/Development/documentation-test/src/core/Topic.tsx",["87","88","89"],"import React from 'react';\n\nimport { createStyles, fade, Theme, makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport Collapse from '@material-ui/core/Collapse';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Divider from '@material-ui/core/Divider';\n\nimport Note from './Note';\n\nconst useStyles = makeStyles((theme) => ({\n  nested: {\n    paddingLeft: theme.spacing(4),\n   // color: 'blue',\n    //textDecoration: 'underline'\n  },\n  nestedText: {\n//      fontWeight: 900,\n    fontSize: '0.9rem',\n    paddingLeft: theme.spacing(1), \n    display: 'block',  \n  }\n}));\n\n\ninterface TopicProps {\n  items: {\n    name: string, path: string,\n    subs: {name: string, path: string}[];\n  },\n  onClick: (node: React.ReactNode) => void\n}\n\nconst Topic: React.FC<TopicProps> = ({items, onClick}) => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const loadTopic = (name: string, path: string) => {\n    return onClick(<Note path={path}/>)\n  }\n\n  const createSub = (name: string, path: string, id: number) => (\n    <ListItem key={id} button className={classes.nested} onClick={() => loadTopic(name, path)}>\n      <ListItemText>\n        <span className={classes.nestedText}>{name}</span>\n      </ListItemText>\n    </ListItem>\n  );\n\n  return (<React.Fragment>\n    <ListItem button onClick={() => setOpen(!open)} className={classes.nested}>\n      <ListItemText primary={items.name} onClick={() => loadTopic(items.name, items.path)} />\n      {open ? <ExpandLess /> : <ExpandMore />}\n    </ListItem>\n    <Collapse in={open} timeout=\"auto\" unmountOnExit>\n      <List component=\"div\" disablePadding>\n        {items.subs.map((sub, id) => createSub(sub.name, sub.path, id))}\n      </List>\n    </Collapse>\n    <Divider />\n  </React.Fragment>);\n}\n\nexport default Topic;","/Users/Jocelyn/Development/documentation-test/src/core/Note.tsx",[],"/Users/Jocelyn/Development/documentation-test/src/markdown/ResponseTypes/index.tsx",[],"/Users/Jocelyn/Development/documentation-test/src/lab/index.tsx",[],["90","91"],"/Users/Jocelyn/Development/documentation-test/src/lab/ShowMeText/ShowMeText.tsx",["92"],"import React from 'react';\nimport MyTextField from './MyTextField';\nimport MyDialog from './MyDialog';\n\n\ninterface ShowMeTextProps { }\n\nconst ShowMeText: React.FC<ShowMeTextProps> = ({ }) => {\n\n  const[myTextValue, setMyTextValue] = React.useState<string>(\"Default value\"); \n\n  return (<div>\n    The current myTextValue is: {myTextValue}\n\n    <MyTextField value={myTextValue}  setValue={setMyTextValue} />\n    <MyDialog myValue={myTextValue}/>\n  </div>)\n}\n\n\nexport default ShowMeText ","/Users/Jocelyn/Development/documentation-test/src/markdown/Expressions/index.tsx",[],"/Users/Jocelyn/Development/documentation-test/src/lab/ShowMeText/MyDialog.tsx",[],"/Users/Jocelyn/Development/documentation-test/src/lab/ShowMeText/MyTextField.tsx",[],"/Users/Jocelyn/Development/documentation-test/src/markdown/Logic/index.tsx",[],"/Users/Jocelyn/Development/documentation-test/src/markdown/BasicOperations/index.tsx",[],"/Users/Jocelyn/Development/documentation-test/src/markdown/AdvancedOperations/index.tsx",[],"/Users/Jocelyn/Development/documentation-test/src/markdown/Reference/index.tsx",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":3,"column":8,"nodeType":"99","messageId":"100","endLine":3,"endColumn":18},{"ruleId":"97","severity":1,"message":"101","line":16,"column":8,"nodeType":"99","messageId":"100","endLine":16,"endColumn":18},{"ruleId":"97","severity":1,"message":"102","line":3,"column":10,"nodeType":"99","messageId":"100","endLine":3,"endColumn":22},{"ruleId":"97","severity":1,"message":"103","line":3,"column":24,"nodeType":"99","messageId":"100","endLine":3,"endColumn":28},{"ruleId":"97","severity":1,"message":"104","line":3,"column":30,"nodeType":"99","messageId":"100","endLine":3,"endColumn":35},{"ruleId":"93","replacedBy":"105"},{"ruleId":"95","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":8,"column":48,"nodeType":"109","messageId":"110","endLine":8,"endColumn":51},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"@typescript-eslint/no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","'ShowMeText' is defined but never used.","'createStyles' is defined but never used.","'fade' is defined but never used.","'Theme' is defined but never used.",["111"],["112"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-global-assign","no-unsafe-negation"]