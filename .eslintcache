[{"/Users/Jocelyn/Development/documentation-test/src/reportWebVitals.js":"1","/Users/Jocelyn/Development/documentation-test/src/themes/index.tsx":"2","/Users/Jocelyn/Development/documentation-test/src/themes/DefaultTheme.tsx":"3","/Users/Jocelyn/Development/documentation-test/src/App.tsx":"4","/Users/Jocelyn/Development/documentation-test/src/core/Navigation.tsx":"5","/Users/Jocelyn/Development/documentation-test/src/core/Topic.tsx":"6","/Users/Jocelyn/Development/documentation-test/src/lab/index.tsx":"7","/Users/Jocelyn/Development/documentation-test/src/lab/ShowMeText/ShowMeText.tsx":"8","/Users/Jocelyn/Development/documentation-test/src/lab/ShowMeText/MyDialog.tsx":"9","/Users/Jocelyn/Development/documentation-test/src/lab/ShowMeText/MyTextField.tsx":"10","/Users/Jocelyn/Development/documentation-test/src/core/Shell.tsx":"11","/Users/Jocelyn/Development/documentation-test/src/core/MarkdownRenderer.tsx":"12","/Users/Jocelyn/Development/documentation-test/src/index.tsx":"13","/Users/Jocelyn/Development/documentation-test/src/core/index.tsx":"14","/Users/Jocelyn/Development/documentation-test/src/core/Service/MarkdownService.tsx":"15","/Users/Jocelyn/Development/documentation-test/src/core/Service/Immutables.tsx":"16"},{"size":362,"mtime":1610459467428,"results":"17","hashOfConfig":"18"},{"size":54,"mtime":1611069271318,"results":"19","hashOfConfig":"18"},{"size":2144,"mtime":1611141361264,"results":"20","hashOfConfig":"18"},{"size":525,"mtime":1611225050668,"results":"21","hashOfConfig":"18"},{"size":3213,"mtime":1611135447089,"results":"22","hashOfConfig":"18"},{"size":2005,"mtime":1611225696046,"results":"23","hashOfConfig":"18"},{"size":75,"mtime":1610357711455,"results":"24","hashOfConfig":"18"},{"size":484,"mtime":1610366526125,"results":"25","hashOfConfig":"18"},{"size":815,"mtime":1610366547880,"results":"26","hashOfConfig":"18"},{"size":898,"mtime":1610364018592,"results":"27","hashOfConfig":"18"},{"size":4435,"mtime":1611225295303,"results":"28","hashOfConfig":"18"},{"size":550,"mtime":1611225654310,"results":"29","hashOfConfig":"18"},{"size":1019,"mtime":1611224656247,"results":"30","hashOfConfig":"18"},{"size":158,"mtime":1611172177039,"results":"31","hashOfConfig":"18"},{"size":3058,"mtime":1611226162834,"results":"32","hashOfConfig":"18"},{"size":2253,"mtime":1611226190743,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"6nym9s",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"39"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"51"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"39"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Jocelyn/Development/documentation-test/src/reportWebVitals.js",[],["72","73"],"/Users/Jocelyn/Development/documentation-test/src/themes/index.tsx",[],["74","75"],"/Users/Jocelyn/Development/documentation-test/src/themes/DefaultTheme.tsx",[],"/Users/Jocelyn/Development/documentation-test/src/App.tsx",[],"/Users/Jocelyn/Development/documentation-test/src/core/Navigation.tsx",["76"],"import React from 'react';\nimport clsx from 'clsx';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { fade, Theme, makeStyles } from '@material-ui/core/styles';\nimport InputBase from '@material-ui/core/InputBase';\nimport SearchIcon from '@material-ui/icons/Search';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    // flexGrow: 1,\n  },\n  hide: {\n    display: 'none',\n  },\n  menuButton: {\n    marginRight: theme.spacing(4),\n  },\n  title: {\n    flexGrow: 1,\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  iconLink:{\n    '&:hover': {\n      cursor: 'pointer',\n    },\n    color: theme.palette.text.primary,\n    alignContent: 'center',\n    paddingLeft: theme.spacing(5)\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.black, 0.10),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.black, 0.05),\n    },\n    marginLeft: 1,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(5),\n      width: 'auto',\n    }\n  },\n  searchIcon: {\n    padding: theme.spacing(1),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    // backgroundColor: theme.palette.text.secondary,\n    // borderColor: theme.palette.text.primary,\n    // fontWeight: 'bold',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '15ch',\n      '&:focus': {\n        width: '25ch',\n      },\n    },\n  },\n}));\n\n\ninterface NavigationProps {\n  onTitleClick: () => void;\n  drawer: {\n    onClick: () => void;\n    open: boolean;\n  }\n}\n\nconst Navigation: React.FC<NavigationProps> = ({onTitleClick, drawer}) => {\n  const classes = useStyles();\n  const img = `${process.env.PUBLIC_URL}/images/logo.png`\n  return (<div className={classes.root}>    \n      <Toolbar>\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          onClick={drawer.onClick}\n          edge=\"start\"\n          className={clsx(classes.menuButton, drawer.open && classes.hide)}>\n          <MenuIcon color=\"primary\"/>\n        </IconButton>\n\n        <img src={img} />\n        <Typography variant=\"body1\" noWrap onClick={onTitleClick} className={classes.iconLink} style={{ flex: 1 }} >\n        </Typography>\n\n        <div className={classes.search}>\n          <div className={classes.searchIcon}><SearchIcon color=\"primary\" /></div>\n          <InputBase\n            placeholder=\"Searchâ€¦\"\n            classes={{\n              root: classes.inputRoot,\n              input: classes.inputInput,\n            }}\n            inputProps={{ 'aria-label': 'search' }}\n          />\n        </div>\n\n\n      </Toolbar>\n    </div>\n  );\n}\n\nexport default Navigation;","/Users/Jocelyn/Development/documentation-test/src/core/Topic.tsx",[],"/Users/Jocelyn/Development/documentation-test/src/lab/index.tsx",[],["77","78"],"/Users/Jocelyn/Development/documentation-test/src/lab/ShowMeText/ShowMeText.tsx",["79"],"import React from 'react';\nimport MyTextField from './MyTextField';\nimport MyDialog from './MyDialog';\n\n\ninterface ShowMeTextProps { }\n\nconst ShowMeText: React.FC<ShowMeTextProps> = ({ }) => {\n\n  const[myTextValue, setMyTextValue] = React.useState<string>(\"Default value\"); \n\n  return (<div>\n    The current myTextValue is: {myTextValue}\n\n    <MyTextField value={myTextValue}  setValue={setMyTextValue} />\n    <MyDialog myValue={myTextValue}/>\n  </div>)\n}\n\n\nexport default ShowMeText ","/Users/Jocelyn/Development/documentation-test/src/lab/ShowMeText/MyDialog.tsx",[],"/Users/Jocelyn/Development/documentation-test/src/lab/ShowMeText/MyTextField.tsx",[],"/Users/Jocelyn/Development/documentation-test/src/core/Shell.tsx",[],"/Users/Jocelyn/Development/documentation-test/src/core/MarkdownRenderer.tsx",["80"],"import React from 'react';\nimport ReactMarkdown from 'react-markdown'\n\nimport { Service } from './';\n\n\ninterface NoteProps {\n  pageItem: Service.PageItem\n}\n\nconst MarkdownRenderer: React.FC<NoteProps> = ({pageItem}) => {\n  \n  const Image = (props: any) => {\n    return <img {...props} \n      src={`${process.env.PUBLIC_URL}/images/${props.src}`}\n      style={ {maxWidth: '75%'} } /> \n  }\n\n  return (<div><ReactMarkdown \n      source={pageItem.src}\n      renderers={{\n        image: Image\n      }}/>\n    </div>);  \n}\n\nexport default MarkdownRenderer;\n","/Users/Jocelyn/Development/documentation-test/src/index.tsx",[],"/Users/Jocelyn/Development/documentation-test/src/core/index.tsx",[],"/Users/Jocelyn/Development/documentation-test/src/core/Service/MarkdownService.tsx",[],"/Users/Jocelyn/Development/documentation-test/src/core/Service/Immutables.tsx",[],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":103,"column":9,"nodeType":"87","endLine":103,"endColumn":26},{"ruleId":"81","replacedBy":"88"},{"ruleId":"83","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":8,"column":48,"nodeType":"92","messageId":"93","endLine":8,"endColumn":51},{"ruleId":"85","severity":1,"message":"86","line":14,"column":12,"nodeType":"87","endLine":16,"endColumn":37},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["94"],["95"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-global-assign","no-unsafe-negation"]